name: ARGOCD

on:
  workflow_call:
    inputs:
      APP_NAME:
        required: false
        type: string
      APP_ENV:
        required: true
        type: string
      ARGOCD_CONF_DIR:
        required: false
        type: string
        default: .argocd
    secrets:
      GH_TOKEN:
        required: true
      ARGOCD_USER:
        required: true
      ARGOCD_PASS:
        required: true
      ARGOCD_URL:
        required: true

env:
  APP_ENV: "${{ inputs.APP_ENV }}"
  APP_NAME: "${{ inputs.APP_NAME }}"
  ARGOCD_CONF_DIR: "${{ inputs.ARGOCD_CONF_DIR }}"
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  ARGOCD_CLI_VERSION: 2.3.3

jobs:
  sync-stg:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        uses: actions/checkout@v2
      - name: Get Short SHA
        id: sha
        run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
      - name: argocd login
        uses: clowdhaus/argo-cd-action/@v1.9.0
        with:
          version: ${{ env.ARGOCD_CLI_VERSION }}
          command: login
          options: --insecure --grpc-web --username ${{ secrets.ARGOCD_USER }} --password ${{ secrets.ARGOCD_PASS}} ${{ secrets.ARGOCD_URL }}
     
      - uses: clowdhaus/argo-cd-action/@v1.9.0
        name: add argocd project
        with:
          version: ${{ env.ARGOCD_CLI_VERSION }}
          command: proj
          options: create ${{ env.APP_NAME }}-${{ env.APP_ENV }} -f ${{ env.ARGOCD_CONF_DIR }}/project-${{ env.APP_ENV }}.yaml --upsert

      - uses: clowdhaus/argo-cd-action/@v1.9.0
        name: add argocd app
        with:
          version: ${{ env.ARGOCD_CLI_VERSION }}
          command: app
          options: create ${{ env.APP_NAME }}-${{ env.APP_ENV }} -f ${{ env.ARGOCD_CONF_DIR }}/project-${{ env.APP_ENV }}.yaml --upsert      

      - name: ArgoCD Overwrite Image Tag
        uses: clowdhaus/argo-cd-action/@main
        with:
          version: ${{ env.ARGOCD_CLI_VERSION }}
          command: app set ${{ env.APP_NAME }}-${{ env.APP_ENV }}
          options: --kustomize-image "ghcr.io/${{ github.repository }}:${{ steps.sha.outputs.sha8 }}"

      - name: Sync Staging
        uses: clowdhaus/argo-cd-action/@main
        with:
          command: app sync ${{ env.APP_NAME }}-${{ env.APP_ENV }} --prune